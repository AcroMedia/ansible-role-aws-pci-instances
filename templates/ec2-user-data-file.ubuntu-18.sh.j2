#!/bin/bash
set -eu
set -o pipefail

# AcroMedia AWS EC2 bootstrapper template for Ubuntu 18 instances
# User data scripts are executed as root. No need for sudo.
# See https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html

function main () {
  logfile=/tmp/udf-init.stdout
  errfile=/tmp/udf-init.stderr
  {
    export DEBIAN_FRONTEND=noninteractive
    apt-get -yqq update
    apt-get -yqq upgrade
    apt-get -yqq install curl awscli git make
    mkdir -p /root/git/acro
    cd /root/git/acro
    git clone "https://github.com/AcroMedia/ansible-role-devops-utils.git"
    cd ansible-role-devops-utils

    # Let all in the "sudo" group run passwordless sudo
    ./bin/passwordless-sudo.sh sudo

    # Add real users
{% for adm in ec2_sysadmins %}
    GITHUB_USER={{ adm.github_account }} ./scripts/deployables/acro-add-user.sh {{ adm.local_user }} --from-github --with-sudo
{% endfor %}
    ## If you have a private gitlab server, you can also do this,
    ## (assumes the gitlab user account is the same as local username to create):
    # GITLAB_SERVER_URL='https://my.server.com' ./acro-add-user.sh --from-gitlab --with-sudo username

    # Set internal hostname
    ./bin/set_fqdn.sh "{{ ec2_instance_fqdn }}" --replace

    # Install sysadmin utils
    cd scripts/deployables
    make -s install

    # Remove default generic user we don't need them any more.
    userdel --remove ubuntu

{% if '-app' in ec2_instance_fqdn %}
    # App nodes get NGINX installed off the bat, so they can be "healthy" by default when the get attached to the load balancer
    apt-add-repository --yes --update ppa:nginx/stable
    apt-get -yqq install nginx
{% endif %}

    # Gather some useful information,
    PRIVATE_IP=$(ip -o route get to 8.8.8.8 | sed -n 's/.*src \([0-9.]\+\).*/\1/p') || true
    INSTANCE_ID=$(curl -sS http://169.254.169.254/latest/meta-data/instance-id)
    SSH_FINGERPRINT=$(ssh-keygen -lf /etc/ssh/ssh_host_ecdsa_key.pub | awk '{print $2}')
    # curl -Ss ....  # maybe we want to let some external service that we're alive and ready for service?

  } 1> "$logfile" 2> "$errfile"

}

main "$@"
