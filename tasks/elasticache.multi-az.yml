---
- name: 'Configure a multi-az elasticache replication group @TODO MAKE THIS WORK!!! You have to create manually at this moment. # See https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/WhatIs.Terms.html'
  elasticache:   #  See https://docs.ansible.com/ansible/latest/modules/elasticache_module.html
    aws_access_key: "{{ aws_api_access_key }}"
    aws_secret_key: "{{ aws_api_secret_key }}"
    cache_engine_version: "{{ elasticache_engine_version }}"
    # cache_parameter_group: use default
    cache_port: "{{ elasticache_port }}"
    cache_subnet_group: "{{ elasticache_subnet_group_name }}"
    engine: "{{ elasticache_engine }}"
    hard_modify: no
    name: "{{ elasticache_cluster_name }}"
    node_type: "{{ elasticache_instance_type }}"
    num_nodes: "{{ elasticache_num_nodes }}"
    region: "{{ aws_vpc_region }}"
    state: "{{ elasticache_state }}"
    security_group_ids:
      - "{{ ec2_cache_nodes_security_group_id }}"
    wait: no
    zone: "{{ elasticache_availability_zone }}"
  register: elasticache_instance_result
  ignore_errors: true

- debug:
    var: elasticache_instance_result
    verbosity: 1

- name: Get the current caller identity information
  aws_caller_info:
    aws_access_key: "{{ aws_api_access_key }}"
    aws_secret_key: "{{ aws_api_secret_key }}"
  register: _caller_info

- name: obtain all Elasticache information
  elasticache_info:
    aws_access_key: "{{ aws_api_access_key }}"
    aws_secret_key: "{{ aws_api_secret_key }}"
    region: "{{ aws_vpc_region }}"
  register: elasticache_info_result

- debug:
    var: elasticache_info_result
    verbosity: 1

- set_fact:
    elasticache_cluster_arns: '[
      {% for clust in elasticache_info_result.elasticache_clusters %}
      {% if (loop.index0 > 0) %}
      ,
      {% endif %}
      {
      "elasticache_cluster_arn": "arn:aws:elasticache:{{ aws_vpc_region }}:{{ _caller_info.account }}:cluster:{{ clust.cache_cluster_id }}"
      }
      {% endfor %}
      ]'

- debug:
    var: elasticache_cluster_arns
    verbosity: 1

- name: Tag elasticache replication group nodes manually because the elasticache module does not yet support tagging
  command: >
    aws elasticache add-tags-to-resource
    --resource-name '{{ item.elasticache_cluster_arn }}'
    --tags '{{ aws_billing_tags | dict2items(key_name='Key', value_name='Value')  | to_json }}'
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_api_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_api_secret_key }}"
    AWS_DEFAULT_REGION: "{{ aws_vpc_region }}"
  when: (aws_billing_tags | length) > 0
  register: elasticache_repl_nodes_tag_result
  with_items: "{{ elasticache_cluster_arns }}"

- debug:
    var: elasticache_repl_nodes_tag_result
    verbosity: 1
